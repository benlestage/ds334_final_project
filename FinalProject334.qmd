---
title: "Final Project"
author: "Ben LeStage"
format: 
  html:
    embed-resources: true
---

```{r}
library(tidyverse)
library(readr)
library(plotly)
SLU_Hockey <- read_csv("DF/FinalProject2.csv")

SLU_Hockey <- SLU_Hockey |> rename(games = Games)
```

```{r}

plot1 <- ggplot(data = SLU_Hockey, aes(x = games, y = points, label = player)) +
  geom_point() +
  theme_minimal() +
  labs(title = "Points vs Games Played 2023-2024")

ggplotly(plot1, tooltip = "label")

plot2 <- ggplot(data = SLU_Hockey |> filter(year == "2022-2023") |> filter(position == "F"), 
       aes(x = Games, y = points, label = player)) +
  geom_point() + 
  theme_minimal() +
  labs(title = "Points vs Games Played for Forwards 2022-2023")

ggplotly(plot2, tooltip = "label")

SLU_Hockey |> distinct(year, wins, losses, ties, `ECAC Elimination`) |> arrange(year)
 ## ^ Use for table output
```




```{r}
## Shiny App

library(shiny)
library(glue)

x_select <- names(SLU_Hockey)[4:7]
y_select <- names(SLU_Hockey)[4:16]

df <- SLU_Hockey |> distinct(year, wins, losses, ties, `ECAC Elimination`) |> arrange(year)

SLU_Hockey <- SLU_Hockey |> arrange(year)
 
ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      radioButtons("position_sel", label = "Position:",
                   choices = SLU_Hockey$position |> unique()),
      selectInput("x_sel", label = "Select X Variable:",
                  choices = x_select, selected = "Games"),
      selectInput("y_sel", label = "Select Y Variable:",
                  choices = y_select, selected = "points"),
      radioButtons("year_sel", label = "Select Season",
                   choices = SLU_Hockey$year |> unique())
    ),
    mainPanel(
      plotlyOutput("SLU_plot"),
      tableOutput("season_stats")
    )
  )
  
)

server <- function(input, output, session) {
  SLUposition_reactive <- reactive({
    SLU_oneyear <- SLU_Hockey |> filter(year == input$year_sel) |> filter(position == input$position_sel)
    SLU_oneyear
  })
  
  SLUnoposition_reactive <- reactive({
    SLU_noposition <- SLU_Hockey |> filter(year == input$year_sel)
    SLU_noposition
  })
  
  
  plot1 <- reactive({ggplot(SLUposition_reactive(), 
       aes(x = .data[[input$x_sel]], y = .data[[input$y_sel]], label = player, colour = position)) +
  geom_point() + 
  labs(title = glue::glue(input$x_sel, " vs ", input$y_sel, " for ", input$position_sel, " ", input$year_sel)) +
      theme_minimal() +
      scale_colour_viridis_d()
  })
  
  output$SLU_plot <- renderPlotly({plot1()
    })
  
  output$season_stats <- renderTable({df
    })
}


shinyApp(ui, server)


### Cant figure out how to add option to have both forwards and defensemen on same plot. Want to create an option for this that will cancel out the filter argument for position 
## Want to make default all players but want option for breaking by position do I need an if/else statement?

### ADD GOALTENDING STATS AND SEPARATE PLOT TO DEMONSTRATE THAT GOALTENDING HAS GIVEN THEM EVERYTHING
```








































































































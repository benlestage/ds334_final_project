---
title: "Coding Quiz 5"
author: "Ben LeStage"
format: 
  html:
    embed-resources: true
---

```{r}
library(tidyverse)
library(readr)
library(plotly)
SLU_Hockey <- read_csv("DF/FinalProject2.csv")

SLU_Hockey <- SLU_Hockey |> rename(games = Games)
```

```{r}

plot1 <- ggplot(data = SLU_Hockey, aes(x = games, y = points, label = player)) +
  geom_point() +
  theme_minimal() +
  labs(title = "Points vs Games Played 2023-2024")

ggplotly(plot1, tooltip = "label")

plot2 <- ggplot(data = SLU_Hockey |> filter(year == "2022-2023") |> filter(position == "F"), 
       aes(x = Games, y = points, label = player)) +
  geom_point() + 
  theme_minimal() +
  labs(title = "Points vs Games Played for Forwards 2022-2023")

ggplotly(plot2, tooltip = "label")

SLU_Hockey |> distinct(year, wins, losses, ties, `ECAC Elimination`) |> arrange(year)
 ## ^ Use for table output
```




```{r}
## Shiny App

library(shiny)
library(glue)

x_select <- names(SLU_Hockey)[4:16]
y_select <- names(SLU_Hockey)[4:16]

df <- SLU_Hockey |> distinct(year, wins, losses, ties, `ECAC Elimination`) |> arrange(year)

 
ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      radioButtons("position_sel", label = "Position:",
                   choices = SLU_Hockey$position |> unique()),
      selectInput("x_sel", label = "Select X Variable:",
                  choices = x_select, selected = "Games"),
      selectInput("y_sel", label = "Select Y Variable:",
                  choices = y_select, selected = "points"),
      radioButtons("year_sel", label = "Select Season",
                   choices = SLU_Hockey$year |> unique())
    ),
    mainPanel(
      plotlyOutput("SLU_plot"),
      tableOutput("season_stats")
    )
  )
  
)

server <- function(input, output, session) {
  SLU_reactive <- reactive({
    SLU_oneyear <- SLU_Hockey |> filter(year == input$year_sel) |> filter(position == input$position_sel)
    SLU_oneyear
  })
  
  
  plot1 <- reactive({ggplot(SLU_reactive(), 
       aes(x = .data[[input$x_sel]], y = .data[[input$y_sel]], label = player)) +
  geom_point() + 
  labs(title = glue::glue(input$x_sel, " vs ", input$y_sel, " for ", input$position_sel, " ", input$year_sel)) +
      theme_minimal()
  })
  
  output$SLU_plot <- renderPlotly({plot1()})
  
  
  output$season_stats <- renderTable({df
    })
}


shinyApp(ui, server)


### figure out how to have option for all positions, decide which variables to include as options for x/y variables, decide whether to include just player name as tooltip, organize options so years are in order
```









































































































